name: Build Docker Image Database Libri

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *' # ogni giorno alle 3:00 UTC

permissions:
  contents: write

jobs:
  download-csv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Scarica File Csv delle Scuole
        run: |
          # Crea directory per i CSV
          mkdir -p data
          
      - name: Scarica File Csv delle Scuole
        run: |
          CHANGES=0
          
          url=https://dati.istruzione.it/opendata/opendata/catalogo/elements1/leaf/SCUANAGRAFESTAT20252620250901.csv

          filename=$(basename "$url")
          filepath="data/$filename"

          if [ -f "$filepath.gz" ]; then
              echo "ðŸŸ¡ Il file $filepath esiste giÃ . Salto."
            else
              echo "ðŸŸ¢ Scarico $url â†’ $filepath"
              curl -sSL "$url" -o "$filepath"
              gzip -9 "$filepath"
              if [ -s "$filepath.gz" ]; then
                  git add "$filepath.gz"
                  CHANGES=1
              else
                  echo "ðŸ”´ Il file $filename Ã¨ vuoto o non valido. Lo rimuovo."
                  rm -f "$filepath.gz"
              fi
          fi
          
          echo "âœ… Download completato."
          echo "CHANGES=$CHANGES" >> $GITHUB_ENV
      
      - name: Commit e push (se ci sono modifiche)
        if: env.CHANGES == '1'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -m "Aggiunti nuovi file CSV da URL remoti"
          git push

      - name: Set up DuckDB
        run: |
          curl -L https://github.com/duckdb/duckdb/releases/download/v1.3.2/duckdb_cli-linux-amd64.zip -o duckdb.zip
          unzip duckdb.zip
          chmod +x duckdb
          sudo mv duckdb /usr/local/bin/
